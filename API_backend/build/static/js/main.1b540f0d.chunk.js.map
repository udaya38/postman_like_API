{"version":3,"sources":["Components/Header.js","Components/Post.js","Components/Put.js","Components/Delete.js","App.js","reportWebVitals.js","index.js"],"names":["Header","setjso","useState","title","setTitle","validate","a","fetch","method","headers","result","json","body","JSON","stringify","validateone","className","onClick","type","onChange","e","target","value","name","Post","content","setContent","validatePost","Put","Delete","App","jso","setJso","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b540f0d.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({setjso}) {\r\n  const [title, setTitle] = useState('');\r\n  const validate=async()=>{\r\n    const result = await fetch(`/articles`, {\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            const body = await result.json();\r\n            setjso(JSON.stringify(body,null,2));\r\n  };\r\n  const validateone=async()=>{\r\n    const result = await fetch(`/articles/${title}`, {\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            const body = await result.json();\r\n            setjso(JSON.stringify(body,null,2));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>HTTP get request</h3>\r\n      <button onClick={()=>validate()}>Get All</button>\r\n      <br/>\r\n      <label>Title</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} name={title}/>\r\n      <button onClick={()=>validateone()}>Get one</button>\r\n      <hr/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {useState} from 'react';\r\nimport './Header.css';\r\n\r\nfunction Post({setjso}) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const validatePost=async()=>{\r\n    const result = await fetch(\"/articles\", {\r\n                method: 'post',\r\n                body: JSON.stringify({ title:title, content:content }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            const body = await result.json();\r\n            setjso(JSON.stringify(body,null,2));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>HTTP post request</h3>\r\n      <label>Title</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} name={title}/>\r\n      <br/>\r\n      <label>Content</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setContent(e.target.value)} name={content}/>\r\n      <br/>\r\n      <button onClick={()=>validatePost()}>Post</button>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import {useState} from 'react';\r\nimport './Header.css';\r\n\r\nfunction Put({setjso}) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const validatePost=async()=>{\r\n    const result = await fetch(\"/articles\", {\r\n                method: 'put',\r\n                body: JSON.stringify({ title:title, content:content }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n            const body = await result.json();\r\n            setjso(JSON.stringify(body));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>HTTP put request</h3>\r\n      <label>Content need to be updated for the title</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} name={title}/>\r\n      <br/>\r\n      <label>Content</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setContent(e.target.value)} name={content}/>\r\n      <br/>\r\n      <button onClick={()=>validatePost()}>Put</button>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Put;\r\n","import {useState} from 'react';\r\nimport './Header.css';\r\n\r\nfunction Delete({setjso}) {\r\n  const [title, setTitle] = useState('');\r\n  const validateone=async()=>{\r\n    const result = await fetch(`/articles/${title}`, {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            const body = await result.json();\r\n            setjso(JSON.stringify(body,null,2));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>HTTP delete request</h3>\r\n      <label>Title name need to be deleted</label>\r\n      <br/>\r\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} name={title}/>\r\n      <br/>\r\n      <button onClick={()=>validateone()}>Delete</button>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Delete;\r\n","import Header from './Components/Header';\nimport Post from './Components/Post';\nimport Put from './Components/Put';\nimport Delete from './Components/Delete';\nimport {useState} from 'react';\nimport './App.css';\nfunction App() {\n  const [jso,setJso]=useState(\"See the response here!!!\");\n  return (\n    <div className=\"row\">\n      <div className=\"column high\">\n        <div className=\"jsons\">\n          <Header setjso={setJso}/>\n        </div>\n        <div className=\"jsons\">\n          <Post setjso={setJso}/>\n        </div>\n        <div className=\"jsons\">\n          <Put setjso={setJso}/>\n        </div>\n        <div className=\"jsons\">\n          <Delete setjso={setJso}/>\n        </div>\n      </div>\n      <div className=\"column stat\">\n        <div className='pre'>\n        <pre >\n          {jso}\n        </pre>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}